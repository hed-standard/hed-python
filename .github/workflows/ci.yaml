name: CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

permissions:
  contents: read
  id-token: write

jobs:
  determine_version:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          if [[ "${{ github.event_name }}" == 'push' && "${{ github.ref }}" == 'refs/heads/main' ]]; then
            # Push to main branch
            echo 'matrix=["3.10", "3.11", "3.12", "3.13"]' >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == 'pull_request' && "${{ github.event.pull_request.base.ref }}" == 'main' ]]; then
            # PR to main branch
            echo 'matrix=[ "3.10", "3.11", "3.12", "3.13"]' >> $GITHUB_OUTPUT
          else
            echo 'matrix=["3.10", "3.13"]' >> $GITHUB_OUTPUT
          fi

  build:
    needs: determine_version
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: ${{fromJson(needs.determine_version.outputs.matrix)}}

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v4
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('docs/requirements.txt') }}

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r docs/requirements.txt
          pip install -e .[test]

      # Run spec tests without coverage for non Python 3.10
      - name: Run spec_test
        env:
          GITHUB_TOKEN: ${{ github.token }}
        continue-on-error: true
        run: |  
           python -m unittest discover spec_tests

      # Run unittest without coverage
      - name: Test with unittest
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          python -m unittest discover tests
