{
    "services": {
        "get_services": {
            "Description": "Return a list of hed services with descriptions.",
            "Parameters": []
        },
        "events_assemble": {
            "Name": "events_assemble",
            "Description": "Assemble all annotations for each event in a BIDS-style event file into a single HED string. Returned data: a file of assembled events as text or an error file as text if errors.",
            "Parameters": [
                "events_string",
                "json_string",
                [
                    "schema_string",
                    "schema_url",
                    "schema_version"
                ],
                "check_for_warnings",
                "defs_expand"
            ]
        },
        "events_extract": {
            "Name": "events_extract",
            "Description": "Extract a template JSON sidecar based on the contents of the event file.  Returned data: A JSON sidecar (template) if no errors.",
            "Parameters": [
                "events_string"
            ]
        },
        "events_validate": {
            "Name": "events_validate",
            "Description": "Validate a BIDS-style event file and its JSON sidecar if provided. Returned data: an error file as text if errors.",
            "Parameters": [
                "events_string",
                 "json_string",
                [
                    "schema_string",
                    "schema_url",
                    "schema_version"
                ],
                "check_for_warnings"
            ]
        },
        "sidecar_to_long": {
            "Description": "Convert a JSON sidecar with all of its HED tags expressed in long form. Returned data: a converted JSON sidecar as text or an error file as text if errors.",
            "Parameters": [
                "json_string",
                [
                    "schema_string",
                    "schema_url",
                    "schema_version"
                ]
            ]
        },
        "sidecar_to_short": {
            "Description": "Convert a JSON sidecar with all of its HED tags expressed in short form. Returned data: a converted JSON sidecar as text or an error file as text if errors.",
            "Parameters": [
                "json_string",
                [
                    "schema_string",
                    "schema_url",
                    "schema_version"
                ]
            ]
        },
        "sidecar_validate": {
            "Description": "Validate a BIDS JSON sidecar (in string form) and return errors.",
            "Parameters": [
                "json_string",
                [
                    "schema_string",
                    "schema_url",
                    "schema_version"
                ],
                "check_for_warnings"
            ]
        },
        "spreadsheet_validate": {
            "Description": "Validate a spreadsheet (tsv string) with HED tags in specified columns.",
            "Parameters": [
                "spreadsheet_string",
                [
                    "schema_string",
                    "schema_url",
                    "schema_version"
                ],
                [
                    "column_x_input",
                    "column_x_check"
                ],
                "check_for_warnings",
                "has_column_names"
            ]
        },
        "strings_to_long": {
            "Description": "Convert a list of strings to long form if valid, otherwise return errors.",
            "Parameters": [
                "string_list",
                [
                    "schema_string",
                    "schema_url",
                    "schema_version"
                ]
            ]
        },
        "strings_to_short": {
            "Description": "Convert a list of strings to short form if valid, otherwise return errors.",
            "Parameters": [
                "string_list",
                [
                    "schema_string",
                    "schema_url",
                    "schema_version"
                ]
            ]
        },
        "strings_validate": {
            "Description": "Validate a list of HED strings and return errors.",
            "Parameters": [
                "string_list",
                [
                    "schema_string",
                    "schema_url",
                    "schema_version"
                ],
                "check_for_warnings"
            ]
        }
    },
    "parameter_meanings": {
        "check_for_warnings": "If true, check for warnings when processing HED strings.",
        "column_x_check": "If present with value 'on' column x has HED tags.",
        "column_x_input": "Contains the prefix prepended to column x if column x has HED tags.",
        "defs_expand": "If true replaces def/XXX with def-expand/XXX grouped with the definition content.",
        "events_string": "A BIDS events file as a string.",
        "has_column_names": "If true, the first row of the spreadsheet or events file is interpreted as column names.",
        "hed_strings": "List of HED strings to be processed.",
        "json_string": "JSON sidecar as a string",
        "json_strings": "A list of BIDS JSON sidecars as strings.",
        "schema_string": "HED XML schema as a string.",
        "schema_url": "A URL from which a HED schema can be downloaded.",
        "schema_version": "Version of HED to used in processing.",
        "spreadsheet_string": "A spreadsheet tsv as a string."
    },
    "returns": {
        "service": "Name of the requested service.",
        "results": "Results of the operation.",
        "error_type": "Type of error if the service failed.",
        "error_msg": "Explanation of the message if the service failed."
    },
    "results": {
        "command": "The command that was executed in response to the service request.",
        "command_target": "The type of data on which the command was executed.",
        "data": "The data returned by the service. This could be a list of errors or the processed result depending on what happened.",
        "schema_version": "The version of the HED schema used in the processing.",
        "msg_category": "One of success, warning, or failure depending on the result of processing the service.",
        "msg": "Explanation of the result of service processing."
    }
}